import requests
from bs4 import BeautifulSoup
import pyfiglet

ascii_banner = pyfiglet.figlet_format("DATA LEAKAGES CHECK")
print(ascii_banner)

def data_leakage_test(url):
    print("[*] Commencing Data Leakage Vulnerability Assessment for:", url)
    try:
        response = requests.get(url)
        if response.status_code == 200:
            soup = BeautifulSoup(response.content, "html.parser")
            sensitive_terms = ["password", "credit card", "SSN", "login", "username", "email", "phone number", "social security number", "bank account", "personal identification number", "passport", "driver's license", "date of birth", "address", "security question", "mother's maiden name", "account number", "PIN", "private key", "API key", "token", "secret", "confidential", "classified", "sensitive", "proprietary", "privileged", "internal", "restricted", "unpublished", "confidentiality", "privacy", "security", "safety", "vulnerability", "exploit", "breach", "leak", "exposure", "compromise", "incident", "data protection", "GDPR", "HIPAA", "PCI DSS", "PII", "PHI", "financial information", "medical records", "trade secret", "intellectual property", "customer data", "employee data", "user data", "personal data", "confidential information", "sensitive information", "privacy policy", "security policy", "cybersecurity", "cyber attack", "hacking", "phishing", "malware", "ransomware", "data breach", "identity theft", "fraud", "social engineering", "data loss", "data recovery", "backup", "encryption", "decryption", "access control", "authentication", "authorization", "audit", "monitoring", "logging", "intrusion detection", "incident response", "vulnerability assessment", "penetration testing", "firewall", "antivirus", "security patch", "security update"]
            for term in sensitive_terms:
                if soup.find(text=lambda text: text and term.lower() in text.lower()):
                    print("[!] Detected Potential Data Leakage:", f"Term: {term}")
            print("[+] Data Leakage Test Concluded.")
        else:
            print("[!] Unable to Retrieve Website Content.")
    except requests.RequestException as e:
        print("[!] Error Encountered:", e)

# Main function
if __name__ == "__main__":
    try:
        target_url = input("Please Provide the URL of the Website to Test:")
        
        if input("Press Enter to Run Data Leakage Test:"):
            data_leakage_test(target_url)
    except KeyboardInterrupt:
        print("\nProcess interrupted by user.")
