import requests
from colorama import Fore, Style

# Function to test for Server Request Forgery (SRF) vulnerability
def test_srf(url):
    try:
        # Craft a forged request
        forged_request = {
            # Replace these fields with the desired parameters to forge the request
            'method': 'GET',  # HTTP method
            'url': 'http://example.com/endpoint',  # Target URL
            'headers': {'User-Agent': 'Mozilla/5.0'},  # Request headers
            'data': None,  # Request body data
        }

        # Send the forged request
        response = requests.request(**forged_request, allow_redirects=False)

        # Check if the response status code indicates a successful redirection (3xx)
        if 300 <= response.status_code < 400:
            return "high"  # Vulnerability level high if redirection occurs
        else:
            return "low"  # Otherwise, vulnerability level low

    except requests.RequestException:
        return "medium"  # If an error occurs, consider it as medium vulnerability

# Main function
def main():
    try:
        # Prompt the user to input the target website URL
        target_url = input("Enter the URL of the website to test for Server Request Forgery (SRF) vulnerability: ")

        print("[*] Testing for Server Request Forgery (SRF) vulnerability on:", target_url)

        # Test for SRF vulnerability
        vulnerability_level = test_srf(target_url)

        # Print vulnerability metric
        if vulnerability_level == "high":
            print(Fore.RED + "[!] Vulnerability metric: High")
        elif vulnerability_level == "medium":
            print(Fore.YELLOW + "[!] Vulnerability metric: Medium")
        else:
            print(Fore.GREEN + "[!] Vulnerability metric: Low")

    except KeyboardInterrupt:
        print("\n" + Fore.YELLOW + "[-] User interrupted")

# Entry point of the program
if __name__ == "__main__":
    main()
