import requests
from urllib.parse import urljoin
from bs4 import BeautifulSoup
import re
import pyfiglet

ascii_banner = pyfiglet.figlet_format("PATH TRAVERSAL CHECK")
print(ascii_banner)

# Function to test for Path Traversal vulnerability
def test_path_traversal_vulnerability(target_url):
    print("[*] Testing for Path Traversal vulnerability on:", target_url)
    
    try:
        # Send request to the target URL
        response = requests.get(target_url)
        
        # Check if the connection was successful
        if response.status_code != 200:
            print("[!] Unable to connect to the target URL.")
            return
    except Exception as e:
        print("[!] Error occurred:", str(e))
        return
    
    print("[*] Target website is accessible.")
    
    try:
        # Parse HTML content
        soup = BeautifulSoup(response.content, 'html.parser')
        
        # Extract links from HTML content
        links = soup.find_all('a', href=True)
        
        print("[*] Extracting links from the target website...")
        
        vulnerable_links = []
        for link in links:
            href = link['href']
            absolute_link = urljoin(target_url, href)
            
            # Check for suspicious patterns in the link
            if re.search(r'\.\./', href):
                vulnerable_links.append(absolute_link)
        
        if len(vulnerable_links) > 0:
            print("[!] Potential Path Traversal vulnerability detected!")
            print("[*] Vulnerable links found:")
            for link in vulnerable_links:
                print(link)
        else:
            print("[*] Target website is not vulnerable to Path Traversal.")
    except Exception as e:
        print("[!] Error occurred while analyzing links:", str(e))

# Main function
if __name__ == "__main__":
    try:
        # Prompt the user to input the target website URL
        target_url = input("Enter the target website URL:")
        
        if input("Press Enter to Test Path Traversal Vulnerability:"):
            # Test for Path Traversal vulnerability
            test_path_traversal_vulnerability(target_url)
    except KeyboardInterrupt:
        print("\nProcess interrupted by user.")
