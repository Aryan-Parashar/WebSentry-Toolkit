import requests
import pyfiglet
from colorama import init, Fore

ascii_banner = pyfiglet.figlet_format("INSECURE AUTHENTICATION VULNERABILITY")
print(ascii_banner)

init()

def test_authentication_vulnerability(target_url):
    print(Fore.YELLOW + "Testing for Authentication Vulnerability on:", target_url)
    try:
        # Sending a GET request without authentication
        response = requests.get(target_url)
        
        # Checking the status code for unauthorized access (401)
        if response.status_code == 401:
            print(Fore.RED + "High Vulnerability Detected: Insecure Authentication")
            print(Fore.GREEN + "Details:")
            print("The server responded with a 401 Unauthorized status code, indicating that access is restricted.")
            print("This vulnerability allows unauthorized users to access restricted pages or endpoints without proper authentication.")
            print(Fore.GREEN + "Recommendations:")
            print("1. Implement strong authentication mechanisms such as multi-factor authentication (MFA).")
            print("2. Ensure that sensitive resources are protected with proper authentication controls.")
            print("3. Regularly audit authentication logs for suspicious activities.")
        elif response.status_code == 403:
            print(Fore.YELLOW + "Medium Vulnerability Detected: Weak Authentication")
            print(Fore.GREEN + "Details:")
            print("The server responded with a 403 Forbidden status code, indicating that access is denied.")
            print("This may indicate weak authentication mechanisms or insufficient access controls.")
            print(Fore.GREEN + "Recommendations:")
            print("1. Review and enhance authentication mechanisms to prevent unauthorized access.")
            print("2. Implement role-based access controls (RBAC) to enforce least privilege.")
            print("3. Conduct security training for users to ensure secure authentication practices.")
        else:
            print(Fore.GREEN + "Low Vulnerability Detected: No Insecure Authentication Vulnerability Found.")
    except requests.exceptions.RequestException as e:
        print(Fore.RED + "Error occurred:", e)

def main():
    # Prompt user for target website URL
    target_url = input("Enter the target website URL: ").strip()
    # Check if the URL starts with 'http://' or 'https://'
    if not target_url.startswith("http://") and not target_url.startswith("https://"):
        target_url = "http://" + target_url

    # Test for Authentication Vulnerability
    test_authentication_vulnerability(target_url)

if __name__ == "__main__":
    main()
