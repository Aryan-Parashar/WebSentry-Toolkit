import requests
import pyfiglet

ascii_banner = pyfiglet.figlet_format("OPEN REDIRECTIONS")
print(ascii_banner)

# Function to check for open redirection vulnerability
def check_redirection_vulnerability(target_url, redirect_url):
    try:
        # Send a GET request to the target URL without allowing redirection
        response = requests.get(target_url, allow_redirects=False)
        status_code = response.status_code
        effective_url = response.headers.get('Location')

        # Analyze the response to determine vulnerability
        if 300 <= status_code < 400:
            if effective_url == redirect_url:
                return "high"  # Vulnerable: Open Redirection exists
            else:
                return "medium"  # Potentially Vulnerable: Redirection occurred but not to the specified URL
        elif 200 <= status_code < 300:
            return "low"  # Not Vulnerable: Redirection did not occur
        else:
            return "low"  # Not Vulnerable: HTTP request failed

    except Exception as e:
        return "low"  # Not Vulnerable: Error occurred during HTTP request

def main():
    target_url = input("Enter the target URL:")
    redirect_url = "https://www.satiengg.in/"

    # Check for open redirection vulnerability and determine the degree of vulnerability
    vulnerability_level = check_redirection_vulnerability(target_url, redirect_url)

    # Display vulnerability assessment based on the determined level
    if vulnerability_level == "high":
        print("The target URL is vulnerable to open redirection (high vulnerability).")
    elif vulnerability_level == "medium":
        print("The target URL is potentially vulnerable to open redirection (medium vulnerability).")
    else:
        print("The target URL is not vulnerable to open redirection (low vulnerability).")

if __name__ == "__main__":
    main()
